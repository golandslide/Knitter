// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/HyperNetworks/Knitter/knitter-monitor/services (interfaces: PodServiceInterface)

package mockservices

import (
	services "github.com/HyperNetworks/Knitter/knitter-monitor/services"
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
)

// Mock of PodServiceInterface interface
type MockPodServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *_MockPodServiceInterfaceRecorder
}

// Recorder for MockPodServiceInterface (not exported)
type _MockPodServiceInterfaceRecorder struct {
	mock *MockPodServiceInterface
}

func NewMockPodServiceInterface(ctrl *gomock.Controller) *MockPodServiceInterface {
	mock := &MockPodServiceInterface{ctrl: ctrl}
	mock.recorder = &_MockPodServiceInterfaceRecorder{mock}
	return mock
}

func (_m *MockPodServiceInterface) EXPECT() *_MockPodServiceInterfaceRecorder {
	return _m.recorder
}

func (_m *MockPodServiceInterface) DeletePodAndPorts(_param0 string, _param1 string) error {
	ret := _m.ctrl.Call(_m, "DeletePodAndPorts", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPodServiceInterfaceRecorder) DeletePodAndPorts(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeletePodAndPorts", arg0, arg1)
}

func (_m *MockPodServiceInterface) Get(_param0 string, _param1 string) (*services.Pod, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0, _param1)
	ret0, _ := ret[0].(*services.Pod)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockPodServiceInterfaceRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0, arg1)
}

func (_m *MockPodServiceInterface) NewPodFromK8sPod(_param0 *v1.Pod) (*services.Pod, error) {
	ret := _m.ctrl.Call(_m, "NewPodFromK8sPod", _param0)
	ret0, _ := ret[0].(*services.Pod)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockPodServiceInterfaceRecorder) NewPodFromK8sPod(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewPodFromK8sPod", arg0)
}

func (_m *MockPodServiceInterface) Save(_param0 *services.Pod) error {
	ret := _m.ctrl.Call(_m, "Save", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPodServiceInterfaceRecorder) Save(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Save", arg0)
}
